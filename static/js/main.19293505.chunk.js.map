{"version":3,"sources":["components/Header.js","components/gameComponents/Console.js","components/gameComponents/Card.js","components/gameComponents/CardsContainer.js","components/GameContainer.js","components/Footer.js","App.js","index.js"],"names":["Header","className","src","alt","style","height","href","target","rel","Console","props","historic","cCount","Card","React","useState","imgPath","set_imgPath","id","pkmnName","set_pkmmName","useEffect","fetchPkmData","url","fetch","mode","then","response","json","name","toUpperCase","sprites","front_default","div","onClick","getId","getRandomN","min","max","Math","floor","random","CardsContainer","selectedNums","set_selectedNums","get_randomNlist","i","list","random_n","includes","push","cardsNums","set_cardsNums","shuffleCards","shuffled_nums","array","length","j","temp","shuffleArray","get_guess","selectedId","count","newselectedNums","concat","map","number","GameContainer","historicRecord","set_historicRecord","currentCount","set_currentCount","game_status","current_n","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19293505.chunk.js","sourcesContent":["\n\nconst Header = () => {\n\n    return(\n        <div className=\"row\">\n            <div className=\"navbar navbar-danger bg-danger\">\n                <div className=\"col-11 text-white\">\n                    <img src=\"./pokeball.png\" alt=\"pokeball_img\" style={{ height: 35 }}></img>\n                    {/* pokeball image*/}\n                    <span>Memory-card Game</span>\n                </div>\n                <div className=\"col-1 text-white\">\n                    {/*btn*/}\n                    <a className=\"btn btn-light mx-auto\" \n                    href=\"https://github.com/Matevito/memory-card\"\n                    target=\"_blank\" rel=\"noreferrer\">Code</a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Header","const Console = (props) => {\n\n    return(\n        <div className=\"row\">\n            \n            {/*Historic record*/}\n            <span>Historic score-record: {props.historic}</span>\n\n            {/*Current count*/}\n            <span>Score: {props.cCount}</span>\n\n        </div>\n    )\n}\n\nexport default Console","import React, { useEffect } from \"react\"\n\nconst Card = (props) => {\n    const [imgPath, set_imgPath] = React.useState(\"./loading.gif\")\n    const [pkmnName, set_pkmmName] = React.useState(props.id)\n\n    useEffect(()=> {\n        fetchPkmData()\n    })\n\n    const fetchPkmData = () => {\n        const url = \"https://pokeapi.co/api/v2/pokemon/\"+props.id\n        fetch(url, {mode:\"cors\"})\n            .then(response => response.json())\n            .then(response => {\n                set_pkmmName(response.name.toUpperCase())\n                //set_imgPath(response.sprites.versions[\"generation-v\"][\"black-white\"].animated.front_default)\n                set_imgPath(response.sprites.front_default)\n            })\n    }\n\n    const returnGuess = () => {\n        props.getId(props.id)\n    }\n\n    return(\n        <div div=\"col\">\n            <div className=\"card text-white bg-secondary\" onClick={returnGuess}>\n                <img src={imgPath} className=\"card-img-top\" alt=\"...\"></img>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\" \n                    style={{\"text-align\": \"center\"}}>\n                        {pkmnName}\n                    </h5>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Card","import React from \"react\"\nimport Card from \"./Card\"\n\nconst getRandomN = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1)) + min\n}\nconst min_num = 1\nconst max_num = 251\nfunction shuffleArray(array) {\n    let i = array.length - 1;\n    for (; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n    return array;\n}\n\nconst CardsContainer = (props) => {\n    const displayCount = 24\n\n    const [selectedNums, set_selectedNums] = React.useState([])\n\n    const get_randomNlist = () => {\n        let list = [];\n        //loop\n        let i;\n        for (i=0; i<displayCount; i++){\n            let random_n  = getRandomN(min_num, max_num);\n            while(list.includes(random_n) || selectedNums.includes(random_n)){\n                random_n = getRandomN(min_num, max_num)\n            }\n            list.push(random_n)\n        }\n\n        return list\n    }\n\n    const [cardsNums, set_cardsNums] = React.useState(get_randomNlist())\n\n    const shuffleCards = () => {\n        const cloneCardsNums = [...cardsNums]\n        let shuffled_nums = shuffleArray(cloneCardsNums)\n        set_cardsNums(shuffled_nums)\n    }\n\n    const CreateCardsNums = () => {\n        set_cardsNums(get_randomNlist)\n    }\n\n\n    const get_guess = (selectedId) => {\n\n        if (selectedNums.includes(selectedId)){\n            props.count(false)\n            set_selectedNums([])\n            CreateCardsNums()\n        } else {\n            props.count(true)\n\n            let newselectedNums = selectedNums.concat(selectedId)\n            set_selectedNums(newselectedNums)\n            shuffleCards()\n\n\n            //run when all cards rendered have been choosen\n\n            //all possible cards already selected\n            if(selectedNums.length === displayCount){\n                //todo: bug goes here -- delay in actualizing set_displayCount\n                \n            }\n\n\n        }\n    }\n\n    return(\n        <div className=\"row row-cols-6\">\n            {cardsNums.map(number => {\n                return(\n                    <Card key={number}\n                    id={number}\n                    getId={get_guess} />)\n            })\n        }\n        </div>\n    )\n}\n\nexport default CardsContainer","import Console from \"./gameComponents/Console\"\nimport CardsContainer from \"./gameComponents/CardsContainer\"\nimport React from \"react\"\n\nconst GameContainer = () => {\n    const [historicRecord, set_historicRecord] = React.useState(0);\n    const [currentCount, set_currentCount] = React.useState(0);\n\n    const handle_Record = () => {\n        if (currentCount > historicRecord){\n            set_historicRecord(currentCount)\n        }\n        return\n    }\n    const handle_cCount = (game_status) => {\n        if(game_status === true){\n            set_currentCount(current_n => current_n+1)\n        }else{\n            //todo:check historic record\n            handle_Record()\n\n            set_currentCount(0)\n        }\n    }\n\n    return (\n        <div className=\"row\">\n            {/*include console and the cards container*/}\n            <Console \n            historic={historicRecord}\n            cCount={currentCount}\n            />\n            <CardsContainer \n            count={handle_cCount}\n            />\n        </div>\n    )\n}\nexport default GameContainer","const Footer = () => {\n    return(\n        <div className=\"row\">\n            <div className=\"bg-dark\">\n                {/*Center this*/}\n                <div className=\"col-auto-fix text-white\">\n                    A proyect by: <a className=\"me-4 text-reset\"\n                    href=\"https://github.com/Matevito\" \n                    target=\"_blank\"\n                    rel=\"noreferrer\">\n                        Mateo Diaz\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer","import Header from \"./components/Header\"\nimport GameContainer from \"./components/GameContainer\"\nimport Footer from \"./components/Footer\"\n\nfunction App() {\n\n  return (\n    <div className=\"container-flex\">\n      <Header />\n      <GameContainer />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}